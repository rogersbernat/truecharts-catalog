name: "Prune Versions"

on:
  workflow_dispatch:

jobs:
  Prune:
    runs-on: ubuntu-latest
    name: "Pruning"
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Prune App Versions
        run: |
          for train in stable incubator dependency core dev games enterprise
          do
            for chart in ${train}/*; do
              if [ -f "${chart}/item.yaml" ]; then
                maxchartversion=$(ls ${chart} | grep -v item.yaml | sort -Vr | head -n1)
                maxchartversion=${maxchartversion%/}
                chartname=$(basename ${chart})
                  for version in ${chart}/*; do
                    versionname=$(basename ${version})
                    if [ -f "${version}/Chart.yaml" ]; then
                      if [[ "${versionname}" != "${maxchartversion}" ]]; then
                        echo "Removing older version ${versionname} for ${chartname}"  
                        rm -Rf ${version}
                      else
                        echo "${versionname} is the latest version, skipping..."
                      fi
                    fi
                  done
              else
                echo "Invalid App"
              fi
            done
          done

      - name: Commit and Push Pruned catalog
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config user.name "${{ env.GIT_USER_NAME }}"
          git config user.email "${{ env.GIT_USER_EMAIL }}"
          git add --all
          git commit -sm "Daily Prune" || exit 0
          git push